version: "3.8"

services:
  www:
    build: .
    ports:
      - "8001:80"
    volumes:
      - ./www:/var/www/html/
    depends_on:
      - db
      - postgres
    networks:
      - app_network

  db:
    image: mysql:5.7
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: myDb
      MYSQL_USER: user
      MYSQL_PASSWORD: test
      MYSQL_ROOT_PASSWORD: test
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 5

  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: my_pg_db
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpassword
    volumes:
      - ./postgres-init:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pguser -d my_pg_db"]
      interval: 5s
      timeout: 3s
      retries: 5

  phpmyadmin:
    image: phpmyadmin
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:80"
    environment:
      PMA_HOST: db
      MYSQL_USER: user
      MYSQL_PASSWORD: test
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8002:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - app_network

volumes:
  mysql_data:
  postgres_data:

networks:
  app_network:
    driver: bridge